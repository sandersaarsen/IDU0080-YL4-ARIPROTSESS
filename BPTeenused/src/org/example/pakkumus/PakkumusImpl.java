
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.example.pakkumus;

import java.net.URL;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Logger;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.namespace.QName;

import ttu.idu0080.order.server.Courier;
import ttu.idu0080.order.server.CourierService;
import ttu.idu0080.order.server.CourierServiceService;
import ttu.idu0080.order.server.EntAddress;

/**
 * This class was generated by Apache CXF 2.5.9
 * 2017-05-13T23:47:10.117+03:00
 * Generated source version: 2.5.9
 * 
 */

@javax.jws.WebService(
                      serviceName = "pakkumus",
                      portName = "pakkumusSOAP",
                      targetNamespace = "http://www.example.org/pakkumus/",
                      wsdlLocation = "file:/C:/Users/Sander/Documents/Kool/Magister/2.Semester/IDU0080/4töö-workplace/BPPakkumus/WebContent/pakkumus.wsdl",
                      endpointInterface = "org.example.pakkumus.Pakkumus")
                      
public class PakkumusImpl implements Pakkumus {

    private static final Logger LOG = Logger.getLogger(PakkumusImpl.class.getName());

    /* (non-Javadoc)
     * @see org.example.pakkumus.Pakkumus#teePakkumus(org.example.pakkumus.PakkumusParing  parameters )*
     */
    public org.example.pakkumus.PakkumusVastus teePakkumus(PakkumusParing parameters) { 
        LOG.info("Executing operation teePakkumus");
        System.out.println(parameters.toString());
        try {
        	CourierServiceService css = new CourierServiceService(new URL("http://localhost:8080/BPServer/services/CourierServicePort?wsdl"), new QName("http://server.order.idu0080.ttu/", "CourierServiceService"));
            CourierService port = css.getCourierServicePort();
            Courier courier = port.getCourierById(parameters.getKullerId());
            
            Address shippingAddress = parameters.getTellimus().getShippingAddress();
            double discount = 0.0;
            for(EntAddress entAddress : courier.getAddresses())
            	discount = shippingAddress.getCounty().equals(entAddress.getCounty()) 
            			? 0.15 :shippingAddress.getCounty().equals(entAddress.getCounty())
            			? 0.15 : 0.0;
            
            if(discount > 0) {
            	for(EntAddress centAddress : courier.getAddresses()) {         
            		for(Address sentAddress : parameters.getTellimus().getSeller().getAddresses())
            			discount += centAddress.getCounty().equals(sentAddress.getCounty()) 
            			? 0.15 :centAddress.getCounty().equals(sentAddress.getCounty())
            			? 0.15 : 0.0;
            	}
            }
            
            int deliveryTime = ThreadLocalRandom.current().nextInt(1, 8);
            double price = parameters.getTellimus().getPriceTotal();
            PakkumusVastus pakkumus = new PakkumusVastus((price * (courier.getPercentFromOrder() / 100.0)) * (1-discount), deliveryTime, "00"+PakkumusVastus.offerIdGen++ + "EE");
            System.out.println("Generated offer: " + pakkumus.toString());
            return pakkumus;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
